// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Analyzes a multiple choice question image and identifies the correct answer.
 *
 * - analyzeMCQQuestion - A function that handles the analysis of the multiple choice question.
 * - AnalyzeMCQQuestionInput - The input type for the analyzeMCQQuestion function.
 * - AnalyzeMCQQuestionOutput - The return type for the analyzeMCQQuestion function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeMCQQuestionInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a multiple choice question, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type AnalyzeMCQQuestionInput = z.infer<typeof AnalyzeMCQQuestionInputSchema>;

const AnalyzeMCQQuestionOutputSchema = z.object({
  answer: z.string().describe('The correct answer to the multiple choice question.'),
  // reason: z.string().describe('The reasoning behind the answer.'),
});
export type AnalyzeMCQQuestionOutput = z.infer<typeof AnalyzeMCQQuestionOutputSchema>;

export async function analyzeMCQQuestion(input: AnalyzeMCQQuestionInput): Promise<AnalyzeMCQQuestionOutput> {
  return analyzeMCQQuestionFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeMCQQuestionPrompt',
  input: {schema: AnalyzeMCQQuestionInputSchema},
  output: {schema: AnalyzeMCQQuestionOutputSchema},
  prompt: `You are an expert Google Cloud Certifications test taker. You are given an image of a multiple choice question.

  You will extract the text from that text to better understand the questions and options provided.

  You will identify the correct answer(s) to the question as quickly as possible. No explanations are required, just ensure the accuracy of your answers.

Image: {{media url=photoDataUri}}`,
});

const analyzeMCQQuestionFlow = ai.defineFlow(
  {
    name: 'analyzeMCQQuestionFlow',
    inputSchema: AnalyzeMCQQuestionInputSchema,
    outputSchema: AnalyzeMCQQuestionOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
